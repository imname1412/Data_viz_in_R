geom_point() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds, size=14)) +
geom_point() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds)) +
geom_point() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds)) +
geom_line() +
theme_bw()
glimpse(df)
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds, size=size)) +
geom_line() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds, size=balance)) +
geom_line() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=available_funds, size=balance)) +
geom_point() +
theme_bw()
df <- read.csv('/Users/bunny/Desktop/feedback/ex_log/deri_main_action.csv')
glimpse(df)
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(timeIn, equity, col=direction)) +
geom_point() +
theme_bw()
df %>%
slice(50:nrow(df)) %>%
ggplot(aes(id, equity, col=direction)) +
geom_point() +
theme_bw()
df %>%
slice() %>%
ggplot(aes(id, equity, col=direction)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction)) +
geom_line() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, size=size_pos)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, size=size_pos)) +
geom_point() +
geom_line() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, size=size_pos)) +
geom_point() +
geom_smooth() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, size=size_pos)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, group_by()=size_pos)) +
df %>%
ggplot(aes(id, equity, col=direction, group_by=size_pos)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, group=size_pos)) +
geom_point() +
theme_bw()
df %>%
ggplot(aes(id, equity, col=direction, size=size_pos)) +
geom_point() +
theme_bw()
source("~/Desktop/Statistics/ggplot_.R", echo=TRUE)
install.packages("dslabs")
data(heights)
source("~/.active-rstudio-document", echo=TRUE)
heights
glimpse(heights)
source("~/.active-rstudio-document", echo=TRUE)
nrow(heights)
data(heights)
heights
heights[777]
heights[777:]
heights[2:3]
nrow(heights)
heights
heights
heights[2:3]
heights$height
heights$height[777]
max(heights$height)
min(heights$height)
mean(heights$height)
median(heights$height)
heights %>%
filter(sex == 'Male')
heights %>%
filter(sex == 'Male') %>%
count()
heights %>%
filter(sex == 'Male') %>%
count()
nrow(heights)
812/1050
(812/1050)*100
heights %>%
filter(height > 78) %>%
count()
heights %>%
filter(height > 78)
heights %>%
filter(height > 78 && sex == 'Female')
heights %>%
filter(height > 78 and sex == 'Female')
heights %>%
filter(height > 78 & sex == 'Female')
heights %>%
filter(height > 78 & sex == 'Female') %>%
count()
heights$sex[777]
heights$sex[777]
heights$sex[777, 1]
heights[777, 1]
heights[1, 777]
heights[1, 777]
heights[777, 1]
min(heights$height)
filter(height == 50)
heights %>%
filter(height == 50)
heights %>%
filter(height == 50)
heights
heights$height[heights == 50]
heights$height[heights = 50]
heights$height[73]
heights$height[heights = 50]
heights %>%
filter(height == 50) %>%
print(height)
heights %>%
filter(height == 50) %>%
print(height)
heights %>%
filter(height == 50) %>%
mean(heights$height)
heights %>%
filter(height == 50)
heights[which.min(heights$height)]
heights[which.min(heights$height), ]
heights %>%
filter(sex == 'Male') %>%
count()
source("~/Desktop/Statistics/ggplot_.R", echo=TRUE)
source("~/Desktop/R/Untitled.R", echo=TRUE)
setwd("/Users/bunny/Desktop/R_programming/data_viz")
pwd
getwd()
which git
git --version
# get working directory
getwd()
# get library
library(tidyverse)
head(mtcars)
# native plot
hist(mtcars$mpg)
glimpse(mtcars)
# native plot
hist(mtcars$hp)
mean(mtcars$hp)
median(mtcars$hp)
str(mtcars)
str(mtcars)
# change data type -> factor (gearing 1 / 0 auto or not)
mtcars$am
mtcars$am <- factor(mtcars$am,
levels = c(0, 1)
labels = c("Auto", "Manual"))
gearing 1 / 0 auto or not)
mtcars$am <- factor(mtcars$am,
levels = c(0, 1),
labels = c("Auto", "Manual"))
str(mtcars)
# review
glimpse(mtcars$am)
# One qualitative variable
table(mtcaes$am)
# One qualitative variable
table(mtcars$am)
barplot(table(mtcars$am))
# box plot
boxplot(mtcars$hp)
fivenum(mtcars$hp)
max(mtcars$hp)
quantile(mtcars$hp, probs = c(0.25, 0.5, 0.75))
Q3 <- quantile(mtcars$hp, probs = .75)
Q1 <- quantile(mtcars$hp, probs = .25)
IQR_hp <- Q3 - Q1
IQR_hp
Q3 + 1.5*IQR_hp
boxplot.stats(mtcars$hp, coef = 1.5)
mtcars_no_outs <- mtcars %>%
filter(hp < 335)
boxplot(mtcars_no_outs)
boxplot(mtcars_no_outs$hp)
# Boxplot 2 variable
boxplot(mtcars, mpg)
# Boxplot 2 variable
boxplot(mtcars, mpg ~ am)
# Boxplot 2 variable
boxplot(data=mtcars, mpg ~ am)
str(mtcars)
# Boxplot 2 variable y ~ x
boxplot(data=mtcars, mpg ~ am, col= c('green', 'sky'))
# Boxplot 2 variable y ~ x
boxplot(data=mtcars, mpg ~ am, col= c('green', 'salmon'))
# scatter plot
plot(mtcars$hp, mtcars$mpg)
# scatter plot
plot(mtcars$hp, mtcars$mpg, pch= 15)
# scatter plot
plot(mtcars$hp, mtcars$mpg, pch= 4)
# scatter plot
plot(mtcars$hp, mtcars$mpg, pch= 15, col='red')
# scatter plot
plot(mtcars$hp, mtcars$mpg, pch= 15, col='gray')
# scatter plot
plot(mtcars$hp, mtcars$mpg, pch= 15, col='blue')
cor(mtcars$hp, mtcars$mpg)
lm(mpg ~ hp, data=mtcars)
plot(mtcars$hp, mtcars$mpg,
pch= 15,
col='blue',
main='Relationship between hp and mpg',
xlab='horse power',
ylab='miles per gallon'
)
head(mtcars)
tcars, mapping = aes(x=hp, y=mpg)) +
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point()
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point() +
geom_smooth()
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point() +
geom_smooth()
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point() +
geom_smooth() +
geom_rug()
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point(size=4) +
geom_smooth() +
geom_rug()
ggplot(data=mtcars, mapping=aes(x=hp, y=mpg)) +
geom_point(size=3) +
geom_smooth() +
geom_rug()
ggplot(mtcars, aes(hp, mpg)) +
geom_point()
ggplot(mtcars, aes(hp, mpg)) +
geom_point(size=3, alpha=0.4)
ggplot(mtcars, aes(hp, mpg)) +
geom_point(size=3, alpha=0.4, col='red')
rs, aes(hp, mpg)) +
ggplot(mtcars, aes(hp)) +
geom_bar()
ggplot(mtcars, aes(hp)) +
geom_bar(bin=10)
ggplot(mtcars, aes(hp)) +
geom_bar(bins=10)
ggplot(mtcars, aes(hp)) +
geom_bar(bins=10)
ggplot(mtcars, aes(hp)) +
geom_histogram(bins=10)
ggplot(mtcars, aes(hp)) +
geom_histogram(bins=10, fill='salmon')
based_plt <- ggplot(mtcars, aes(hp))
geom_boxplot(
based_plt +
geom_boxplot()
based_plt +
geom_boxplot()
# instance 1 var plot
based_plt <- ggplot(mtcars, aes(hp))
based_plt +
geom_boxplot()
based_plt + geom_density()
based_plt + geom_histogram(bin=20)
diamonds
%
count(cut)
# get library
# ggplot2
# -> data, mapping, geometry
library(tidyverse)
# 2 variable
diamonds %>%
count(cut)
diamonds %>%
count(cut)
# 2 variable
diamonds %>%
count(cut) %>%
ggplot() + geom_bar()
# 2 variable
diamonds %>%
count(cut) %>%
ggplot(aes(cut)) + geom_bar()
# 2 variable
diamonds %>%
count(cut) %>%
ggplot(aes(cut, n)) + geom_bar()
# 2 variable
diamonds %>%
count(cut) %>%
ggplot(aes(n)) + geom_bar()
# 2 variable
diamonds %>%
count(cut) %>%
ggplot(aes(cut)) + geom_bar()
ggplot(diamonds, aes(cut)) + geom_bar()
ggplot(diamonds, aes(cut)) +
geom_bar(fill='blue')
ggplot(diamonds, aes(cut)) +
geom_bar(fill='#595959')
ggplot(diamonds, aes(cut)) +
geom_bar(fill='#0366fc')
ggplot(diamonds, aes(cut)) +
geom_bar(fill='#ffd70f')
ggplot(diamonds, aes(cut)) +
geom_bar(fill=color)
nds, aes(cut, fill=cut)) +
ggplot(diamonds, aes(cut, fill=cut)) +
geom_bar()
ggplot(diamonds, aes(cut, fill=color)) +
geom_bar()
ggplot(diamonds, aes(cut, fill=color)) +
geom_bar(position='dodge')
ggplot(diamonds, aes(cut, fill=color)) +
geom_bar(position='fill') # `stack`, `dodge`, `fill`
ggplot(diamonds, aes(cut, fill=color)) +
geom_bar(position='dodge') # `stack`, `dodge`, `fill`
ggplot(diamonds, aes(cut, fill=color)) +
geom_bar(position='stack') # `stack`, `dodge`, `fill`
glimpse(diamonds)
# scatter plot
# for large data set can sample it to show
samp <- sample_n(diamonds, 5000)
ggplot(samp, aes(carat, price)) +
geom_point()
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.4)
ggplot(samp, aes(carat, price, col=cut)) +
geom_point(alpha=0.4)
ggplot(samp, aes(carat, price, col=cut)) +
geom_point(alpha=0.6)
# scatter plot
# for large data set can sample it to show
set.seed(42)
samp <- sample_n(diamonds, 5000)
ggplot(samp, aes(carat, price, col=cut)) +
ggplot(samp, aes(carat, price, col=cut)) +
geom_point(alpha=0.6)
gplot(samp, aes(carat, price, col=cut)) +
geom_point(alpha=0.6)
set.seed(42)
samp <- sample_n(diamonds, 5000)
ggplot(samp, aes(carat, price, col=cut)) +
geom_point(alpha=0.6)
es(carat, price)) +
ggplot(samp, aes(carat, price)) +
geom_point() +
facet_wrap()
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
facet_wrap(~color)
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
facet_wrap(~cut)
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
facet_wrap(~cut, ncol=2)
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
geom_smooth(method = 'lm')
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
geom_smooth(method = 'lm', col='blue') +
facet_wrap(~cut, ncol=2)
# facet
ggplot(samp, aes(carat, price)) +
geom_point() +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2)
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2)
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
lab(
title='facet with scatter'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='facet with scatter'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='Relationship between carat and price by cut',
x='Carat',
y='Price'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='Relationship between carat and price by cut',
x='Carat',
y='Price ($)'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='Relationship between carat and price by cut',
x='Carat',
y='Price (USD)',
caption='ggplot2'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='Relationship between carat and price by cut',
x='Carat',
y='Price (USD)',
caption='ggplot2 pc.dev'
) +
theme_minimal()
# facet
ggplot(samp, aes(carat, price, col=color)) +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm', col='orange') +
facet_wrap(~cut, ncol=2) +
labs(
title='Relationship between carat and price by cut',
x='Carat',
y='Price (USD)',
caption='ggplot2 pc.dev'
) +
theme_minimal()
